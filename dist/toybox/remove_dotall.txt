^[ ]*vm->flags = 0;$
^[ ]*bc_vec_init\(&vm->files, sizeof\(char\*\), NULL\);$
^[ ]*bc_vec_init\(&vm->exprs, sizeof\(char\), NULL\);$
\nprog_err:\n[ ]*bc_vec_free\(&vm->exprs\);$
\nexprs_err:\n[ ]*bc_vec_free\(&vm->files\);$
\n[ ]*bc_vec_free\(&vm->exprs\);$
\n[ ]*bc_vec_free\(&vm->files\);$
^[ ]*st = bc_args\(argc, argv, &vm\.flags, &vm\.exprs, &vm\.files\);\n[ ]*if \(st\) goto exit;$
^[ ]*bcg\.s = vm\.flags & BC_FLAG_S;$
^[ ]*bcg\.w = vm\.flags & BC_FLAG_W;$
^[ ]*if \(vm->exprs\.len\).*?\}$
\n[ ]*if \(help\) bc_vm_printf\(stdout, help, bcg\.name\);$
^[ ]*vm->exe = exe;$
\n[ ]*if \(bcg.bc\) s = bc_vm_envArgs\(vm\);$
\n#if BC_ENABLE_SIGNALS$
\n#endif // BC_ENABLE_SIGNALS$
\n#if DC_ENABLED // Exclude.*?#endif // DC_ENABLED Exclude
\n#if DC_ENABLED.*?#endif // DC_ENABLED
\n#if DC_ENABLED.*?#else // DC_ENABLED
\n#endif // DC_ENABLED
\n#if BC_ENABLED
\n#else // BC_ENABLED.*?#endif // BC_ENABLED
\n#endif // BC_ENABLED
\n#if DC_ENABLED\n#endif // DC_ENABLED$
\n#if BC_ENABLED\n#endif // BC_ENABLED$
\n#ifndef NDEBUG.*?#endif // NDEBUG
\n#ifndef _WIN32
\n#else // _WIN32.*?#endif // _WIN32
\n[ ]*assert\(.*?\);$
\#if !defined\(BC_ENABLED\).*?\#endif\n
^[ ]*// \*\* Exclude start\. \*\*.*?^[ ]*// \*\* Exclude end\. \*\*$
^\tBC_STATUS_INVALID_OPTION,$
^[ ]*p->parse = parse;$
^[ ]*p->parse_init = init;$
^[ ]*p->parse_expr = expr;$
^[ ]*l->next = next;$
^void bc_parse_init\(BcParse \*p, BcProgram \*prog, size_t func\) \{.*?\}
^BcStatus bc_parse_read\(BcParse \*p, BcVec \*code, uint8_t flags\) \{.*?\}
^BcStatus bc_vm_envArgs\(BcVm \*vm\) \{.*?\n\}
^[ ]*vm->env_args = NULL;$
\n[ ]*free\(vm->env_args\);$
^[ ]*bcg\.exreg = vm\.flags & BC_FLAG_X;$
^#ifndef BC_NUM_KARATSUBA_LEN$
^#elif BC_NUM_KARATSUBA_LEN < 2.*?#endif // BC_NUM_KARATSUBA_LEN$
\n// \*\* Busybox exclude start\. \*\*
\n// \*\* Busybox exclude end\. \*\*
^void bc_vm_allocError\(\) \{.*?\n\}$
^void\* bc_vm_malloc\(size_t n\) \{.*?\n\}$
^void\* bc_vm_realloc\(void \*ptr, size_t n\) \{.*?\n\}$
^char\* bc_vm_strdup\(const char \*str\) \{.*?\}$
^void\* bc_vm_malloc\(size_t n\);$
^void\* bc_vm_realloc\(void \*ptr, size_t n\);$
^char\* bc_vm_strdup\(const char \*str\);$
 != 0
\n\n[ ]*BC_STATUS_INVALID_OPTION,$
^BcStatus bc_parse_expression\(BcParse \*p, uint8_t flags\).*?\n\}$
