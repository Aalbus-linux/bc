\n#ifndef NDEBUG.*?#endif // NDEBUG
\n#ifndef _WIN32
\n#else // _WIN32.*?#endif // _WIN32
\n[\t]*assert\(.*?\);$
^[\t]*// \*\* Busybox exclude start\. \*\*.*?^[\t]*// \*\* Busybox exclude end\. \*\*$
^#if !defined\(BC_ENABLED\) && !defined\(DC_ENABLED\).*?#endif$
^#define VERSION_STR\(V\) #V.*?#define BC_VERSION VERSION_STR2\(VERSION\)$
^void\* bc_vm_malloc\(size_t n\) \{.*?\n\}$
^void\* bc_vm_realloc\(void \*ptr, size_t n\) \{.*?\n\}$
^char\* bc_vm_strdup\(const char \*str\) \{.*?\}$
^void\* bc_vm_malloc\(size_t n\);$
^void\* bc_vm_realloc\(void \*ptr, size_t n\);$
^char\* bc_vm_strdup\(const char \*str\);$
^#ifndef BC_NUM_KARATSUBA_LEN$
^#elif BC_NUM_KARATSUBA_LEN < 2.*?#endif // BC_NUM_KARATSUBA_LEN$
\n[\t]*if \(exs->len > 1 \|\| !bcg.bc\) \(\*flags\) \|= BC_FLAG_Q;$
^void bc_args_exprs\(BcVec \*exprs, const char \*str\).*?\n\}
^BcStatus bc_args_file\(BcVec \*exprs, const char \*file\).*?\n\}
^\tif \(vm->exprs\.len\) \{.*?\n\t\}$
\n[\t]*bc_vec_free\(&vm->exprs\);$
^[\t]*bc_vec_init\(&vm->exprs, sizeof\(char\), NULL\);$
\n[\t]*long res;$
\n[\t]*FILE \*f;$
\n[\t]*struct stat pstat;$
\nmalloc_err\:\n[\t]*fclose\(f\);$
^[\t]*fclose\(f\);$
\n\n[ ]*BC_STATUS_INVALID_OPTION,$
\n[\t]*if \(help\) bc_vm_printf\(stdout, help, bcg\.name\);$
