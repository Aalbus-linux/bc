/*
 * *****************************************************************************
 *
 * Copyright 2018 Gavin D. Howard
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 *
 * *****************************************************************************
 *
 * The second bc math library.
 *
 */

define r(x,p){
	auto i,t,n
	if(x==0)return(x)
	if(scale(p))p=p$
	if(p<0)p=-p
	n=(x<0)
	if(n)x=-x
	t=x@p
	if(p>=scale(x)){
		if(n)t=-t
		return(t)
	}
	i=ibase
	ibase=A
	if((x-t)>=(.5>>p))t+=1>>p
	ibase=i
	if(n)t=-t
	return (t)
}
define log(x,b){
	auto p,i,s,l
	i=ibase
	ibase=A
	s=scale
	if(scale<20)scale=20
	if(scale(x)>scale)scale=scale(x)
	scale*=2
	p=l(x)/l(b)
	scale=s
	ibase=i
	return(p)
}
define l2(x){
	return(log(x,2))
}
define l10(x){
	return(log(x,10))
}
define ubytes(x){
	auto p,b,i
	b=ibase
	ibase=A
	if(x<0)x=-x
	x=x$
	p=(l2(x)+1)$
	for(i=1;i*8<p;i*=2){}
	ibase=b
	return(i)
}
define sbytes(x){
	auto p,b,n,z
	z=(x<0)
	if(z)x=-x
	x=x$
	n=ubytes(x)
	b=ibase
	ibase=A
	p=2^(n*8-1)
	if(x>p||(!z&&x==p))n*=2
	ibase=b
	return(n)
}
