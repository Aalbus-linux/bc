/*
 * *****************************************************************************
 *
 * Copyright 2018 Gavin D. Howard
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
 * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
 * OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 * PERFORMANCE OF THIS SOFTWARE.
 *
 * *****************************************************************************
 *
 * The third bc math library. This one has printing functions.
 *
 */

define void output(x,b){
	auto b2
	b2=obase
	obase=b
	x
	obase=b2
}
define void hex(x){
	output(x,G)
}
define void binary(x){
	output(x,2)
}
define void output_byte(x,i,n){
	auto ib,p,y,b
	ib=ibase
	ibase=A
	s=scale
	scale=0
	if(x<0)x=-x
	x=x$
	b=x/(2^(i*8))
	b%=2^((n-i)*8)
	y=log(256,obase)$
	if(b>1)p=log(b,obase)$+1
	else p=b
	for(i=y-p;i>0;--i) print 0
	if(b)print b
	scale=s
	ibase=ib
}
define void output_uint(x,n){
	auto i,ib
	ib=ibase
	ibase=A
	for(i=n-1;i>=0;--i){
		output_byte(x,i,n)
		if(i)print " "
		else print "\n"
	}
	ibase=ib
}
define void hex_uint(x,n){
	auto o
	o=obase
	obase=G
	output_uint(x,n)
	obase=o
}
define void binary_uint(x,n){
	auto o
	o=obase
	obase=2
	output_uint(x,n)
	obase=o
}
define void uint(x){
	auto n
	x=x$
	n=ubytes(x)
	binary_uint(x,n)
	hex_uint(x,n)
}
define void int(x){
	auto n,z
	z=(x<0)
	x=x$
	n=sbytes(x)
	if(z)x=2^(n*8)-(-x)
	binary_uint(x,n)
	hex_uint(x,n)
}
